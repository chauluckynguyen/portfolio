'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SCRIPT_URL = 'https://production-assets.codepen.io/assets/embed/ei.js';

var ReactCodepen = function (_Component) {
  _inherits(ReactCodepen, _Component);

  function ReactCodepen() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ReactCodepen);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactCodepen.__proto__ || Object.getPrototypeOf(ReactCodepen)).call.apply(_ref, [this].concat(args))), _this), _this.state = { loaded: false, loading: true }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ReactCodepen, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      this._mounted = true;

      // load the codepen embed script
      var script = document.createElement('script');
      script.src = SCRIPT_URL;
      script.async = 1;
      script.onload = function () {
        // do not do anything if the component is already unmounted.
        if (!_this2._mounted) return;

        _this2.setState({
          loaded: true,
          loading: false
        });
      };
      script.onerror = function () {
        if (!_this2._mounted) return;

        _this2.setState({
          error: 'Failed to load the pen'
        });
      };

      document.body.appendChild(script);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._mounted = false;
    }
  }, {
    key: 'render',
    value: function render() {
      if (!this.state.loaded && this.props.loader) {
        return _react2.default.createElement(this.props.loader, {
          isLoading: this.state.loading,
          error: this.state.error
        });
      } else if (this.state.loaded) {
        var penLink = 'https://codepen.io/' + this.props.user + '/pen/' + this.props.hash + '/';
        var userProfileLink = 'https://codepen.io/' + this.props.user;

        return _react2.default.createElement(
          'p',
          {
            'data-height': this.props.height,
            'data-theme-id': this.props.themeId,
            'data-slug-hash': this.props.hash,
            'data-default-tab': this.props.defaultTab,
            'data-user': this.props.user,
            'data-embed-version': this.props.version,
            'data-pen-title': this.props.title,
            'data-preview': this.props.preview,
            className: 'codepen'
          },
          'See the Pen ',
          _react2.default.createElement(
            'a',
            { href: penLink },
            this.props.title
          ),
          'by ',
          this.props.user,
          ' (',
          _react2.default.createElement(
            'a',
            { href: userProfileLink },
            '@',
            this.props.user
          ),
          ') on ',
          _react2.default.createElement(
            'a',
            { href: 'https://codepen.io' },
            'CodePen'
          ),
          '.'
        );
      } else {
        return null;
      }
    }
  }]);

  return ReactCodepen;
}(_react.Component);

ReactCodepen.defaultProps = {
  defaultTab: 'css,result',
  height: 300,
  preview: true,
  themeId: 'dark',
  version: 2
};

ReactCodepen.propTypes = {
  defaultTab: _propTypes2.default.string,
  hash: _propTypes2.default.string.isRequired,
  height: _propTypes2.default.number,
  loader: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]),
  preview: _propTypes2.default.bool,
  title: _propTypes2.default.string,
  themeId: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  user: _propTypes2.default.string.isRequired,
  version: _propTypes2.default.number
};

exports.default = ReactCodepen;
///
/// Outputs correct child elements.
/// @name child
/// @group builder
/// @param {map} $selectors [()] - Input a list of selectors.
/// @example scss
///   @include component("alert") {
///     @include child("container") {
///     }
///   }
///
///   // output
///   .sample-alert-container
/// @require {function} get-setup
/// @require {mixin} toggle
///

@mixin child($selectors: ()) {
	// toggle
	@if not get-setup("child") {
		@include toggle((
			"child": true,
			"default-selector-stored": get-setup("default-selector")));
	}

	// create child selector
	$child-selector: "";
	@each $selector in $selectors {
		$i: index($selectors, $selector);
		$child-selector: $child-selector + get-setup("child-prefix") + nth($selectors, $i);
	};

	// toggle selector
	@include toggle(("default-selector": get-setup("default-selector") + $child-selector));

	// output
	@if not get-setup("host") {
		&#{$child-selector} { @content; }
	} @else if get-setup("host") {
		%child-context { @content; }
	}

	// toggle
	@include toggle((
		"child": false,
		"default-selector": get-setup("default-selector-stored")));
}

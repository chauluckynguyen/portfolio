///
/// Shorthand positioning for the `position` property.
/// @name position
/// @group helper
/// @param {string} $position [null] - Choose a position value.
/// @param {list} $args [null] - A list of properties to set: `top` `right` `bottom` `left` and `zero`.
/// @example scss
///   @include position(absolute, top 0);
///

@mixin position($position: null, $args: null) {
	@if $args == "zero" or $args == 0 {
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	} @else {
		@each $o in top right bottom left float {
			$i: index($args, $o);

			@if $i and $i + 1 <= length($args) {
				#{$o}: nth($args, $i + 1);
			}
		}
	}

	position: $position;
}

///
/// Leverages the `position` mixin to use shorthand for the `position` property.
/// @name absolute
/// @group helper
/// @param {list} $args [null] - A list of properties to set: `top` `right` `bottom` `left` and `zero`.
/// @example scss
///   @include absolute(top 0 left 0);
///

@mixin absolute($args) {
	@include position(absolute, $args);
}

///
/// Leverages the `position` mixin to use shorthand for the `position` property.
/// @name fixed
/// @group helper
/// @param {list} $args [null] - A list of properties to set: `top` `right` `bottom` `left` and `zero`.
/// @example scss
///   @include fixed(zero);
///

@mixin fixed($args) {
	@include position(fixed, $args);
}

///
/// Leverages the `position` mixin to use shorthand for the `position` property.
/// @name relative
/// @group helper
/// @param {list} $args [null] - A preoperty to set: `float`.
/// @example scss
///   @include relative(float left);
///

@mixin relative($args) {
	@include position(relative, $args);
}

///
/// Leverages the `position` mixin to use shorthand for the `position` property.
/// @name sticky
/// @group helper
/// @param {list} $args [null] - A list of properties to set: `top` `right` `bottom` `left` and `zero`.
/// @example scss
///   @include sticky(top 0 left 0 right 0);
///

@mixin sticky($args) {
	@include position(sticky, $args);
}
